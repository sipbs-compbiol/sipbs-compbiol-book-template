---
title: "Using `shinylive`"
filters:
  - shinylive
---

`shinylive` is an extension and `R` package that allows for embedding a _serverless_ Shiny application in a Quarto page, as we do in @fig-shinylive-example.

::: {#fig-shinylive-example}

```{shinylive-r}
#| standalone: true
#| viewerHeight: 600

library(shiny)
library(bslib)

# Define UI for app that draws a histogram ----
ui <- page_sidebar(
  sidebar = sidebar(open = "open",
    numericInput("n", "Sample count", 100),
    checkboxInput("pause", "Pause", FALSE),
  ),
  plotOutput("plot", width=500)
)

server <- function(input, output, session) {
  data <- reactive({
    input$resample
    if (!isTRUE(input$pause)) {
      invalidateLater(1000)
    }
    rnorm(input$n)
  })
  
  output$plot <- renderPlot({
    op <- par(cex = 0.5)
    
    hist(data(),
      breaks = 40,
      xlim = c(-2, 2),
      ylim = c(0, 1),
      lty = "blank",
      xlab = "value",
      freq = FALSE,
      main = ""
    )
    
    x <- seq(from = -2, to = 2, length.out = 500)
    y <- dnorm(x)
    lines(x, y, lwd=1.5)
    
    lwd <- 5
    abline(v=0, col="red", lwd=lwd, lty=2)
    abline(v=mean(data()), col="blue", lwd=lwd, lty=1)
    
    legend(legend = c("Normal", "Mean", "Sample mean"),
      col = c("black", "red", "blue"),
      lty = c(1, 2, 1),
      lwd = c(1, lwd, lwd),
      x = -2,
      y = 1
    )
  }, res=140)
}

# Create Shiny app ----
shinyApp(ui = ui, server = server)
```

Interactive `shinylive` example showing random samples from a Normal distribution. Click the 'Pause' checkbox to freeze on a sample. Use the 'Sample count' option to choose the number of samples. The black line shows the Normal distribution being sampled from, and the dashed red line shows the population mean. The solid blue line shows the sample mean. The grey histogram shows the sample.

:::


## Installing the `shinylive` extension

- [`shinylive` extension repository](https://github.com/coatless-quarto/r-shinylive-demo)

For local use and development you will need to install the `shinylive` package:

```r
install.packages("shinylive")
```

To install the `shinylive` Quarto extension, use the commmand:

```bash
quarto add quarto-ext/shinylive
```

::: { .callout-important }
The `shinylive` extension is installed as part of this template, and the `shinylive` package is installed _via_ the `DESCRIPTION` file. This extension should work automatically in the rendered GitHub pages.
:::